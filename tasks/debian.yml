---

#- name: apt | Enable backports - replace
#  ansible.builtin.replace:
#    dest='/etc/apt/sources.list' regexp='^# deb http://(.*)/ubuntu([/]*) trusty-backports' replace='deb http://\1/ubuntu\2 trusty-backports' backup=yes
#  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (do_install is defined and do_install)
#- name: apt | Enable backports - lineinfile
#  ansible.builtin.lineinfile:
#    dest='/etc/apt/sources.list' regexp='^deb http://(.*)/ubuntu([/]*) trusty-backports' line='deb http://us.archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse' backup=yes
#  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (do_install is defined and do_install)
#- ansible.builtin.command: "cat /etc/apt/sources.list"

- name: apt | ensure apt-transport-https is present
  ansible.builtin.apt:
    name: apt-transport-https
    state: present

- name: add draios key
  ansible.builtin.apt_key: url=https://s3.amazonaws.com/download.draios.com/DRAIOS-GPG-KEY.public state=present
- name: install draios apt source
  ansible.builtin.get_url:
    url: http://download.draios.com/stable/deb/draios.list
    dest: /etc/apt/sources.list.d/draios.list
    mode: '0444'
    checksum: 'sha256:6905dcd6d297c4e3fc0df1a25679b1e15c4517e3fd5d197cea7840cc947436bd'

- name: apt | sysdig install
  ansible.builtin.apt:
    name: sysdig
    state: present
    update_cache: yes

- name: apt | kernel headers install
  ansible.builtin.apt:
    name: "linux-headers-{{ ansible_kernel }}"
    state: present
  ignore_errors: true
